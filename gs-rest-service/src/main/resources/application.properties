# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = none
spring.jpa.generate-ddl=false
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/protodb?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=protouser
spring.datasource.password=admin
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.datasource.initialization-mode=always

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

#spring.datasource.driver-class-name=org.hsqldb.jdbc.JDBCDriver

# control the sql db initialization (from schema.sql, data.sql)
#spring.datasource.initialize=true
#spring.jpa.hibernate.ddl-auto=update


# none by default spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.hibernate.show-sql=true
spring.jpa.hibernate.cache.use_query_cache = false
spring.jpa.hibernate.cache.use_second_level_cache = false

spring.http.multipart.max-file-size=1500KB
spring.http.multipart.max-request-size=1500KB


app.name = application
jwt.header = Authentication
# 60 * 60 * 24 = 86400
jwt.expires_in = 86400
jwt.secret = vianee2
jwt.cookie = AUTH-TOKEN

redis.host = localhost
redis.port = 3306 #[REDIS PORT*]
redis.password = admin #[REDIS PASS*]